import{_ as a,V as d,W as l,Z as e,Y as o,a1 as t,$ as s,D as i,a0 as c}from"./framework-6ade477a.js";const r={},u=s(`<p><code>RHIInstance</code>是容纳了 Verse RHI 所有方法的抽象父类，并且派生了<code>D3D12Instance</code>和<code>VulkanInstance</code>类，要使用 Direct3D 12 接口就使用具体的<code>D3D12Instance</code>类，要使用 Vulkan 接口就使用具体的<code>VulkanInstance</code>类。</p><p>使用<code>Init</code>函数来初始化<code>RHIInstance</code>，这要求一个<code>RHIInstanceInitInfo</code>结构体，它的原型如下：</p><div class="language-C++ line-numbers-mode" data-ext="C++"><pre class="language-C++"><code>struct RHIInstanceInitInfo {
    const char* applicationName;
    uint32_t applicationVersion;
};
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>Destroy</code>函数来释放<code>RHIInstance</code>资源。</p><p>在 Debug 模式下，<code>RHIInstance</code>会自动为程序创建调试图形API所需要的接口，无需去手动设置图形API的调试。</p><p><code>RHIInstance</code>提供的方法：</p><p>创建：</p>`,7),p=e("p",null,"释放：",-1),h=e("p",null,"获取：",-1),I=e("p",null,"命令：",-1);function m(_,f){const n=i("RouterLink");return d(),l("div",null,[u,e("p",null,[o(n,{to:"/zh/docs/rhi/RHIDevice.html"},{default:t(()=>[c("CreateDevice")]),_:1})]),e("p",null,[o(n,{to:"/zh/docs/rhi/RHISwapchain.html"},{default:t(()=>[c("CreateSwapchain")]),_:1})]),e("p",null,[o(n,{to:"/zh/docs/rhi/RHICommandPool.html"},{default:t(()=>[c("CreateCommandPool")]),_:1})]),p,e("p",null,[o(n,{to:"/zh/docs/rhi/RHIDevice.html"},{default:t(()=>[c("DestroyDevice")]),_:1})]),e("p",null,[o(n,{to:"/zh/docs/rhi/RHISwapchain.html"},{default:t(()=>[c("DestroySwapchain")]),_:1})]),e("p",null,[o(n,{to:"/zh/docs/rhi/RHICommandPool.html"},{default:t(()=>[c("DestroyCommandPool")]),_:1})]),h,e("p",null,[o(n,{to:"/zh/docs/rhi/RHIQueue.html"},{default:t(()=>[c("GetQueue")]),_:1})]),e("p",null,[o(n,{to:"/zh/docs/rhi/RHICommandBuffer.html"},{default:t(()=>[c("AllocateCommandBuffers")]),_:1})]),I])}const v=a(r,[["render",m],["__file","RHIInstance.html.vue"]]);export{v as default};
