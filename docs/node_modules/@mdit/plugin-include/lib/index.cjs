"use strict";var v=require("node:fs"),h=require("upath");const b=/\r\n?|\n/g,_=/^([ \t]*)(.*)\n/gm,E=[/^<!-- ?#?((?:end)?region) ([\w*-]+) ?-->$/,/^\/\/ ?#?((?:end)?region) ([\w*-]+)$/,/^\/\* ?#((?:end)?region) ([\w*-]+) ?\*\/$/,/^#pragma ((?:end)?region) ([\w*-]+)$/,/^<!-- #?((?:end)?region) ([\w*-]+) -->$/,/^#((?:End )Region) ([\w*-]+)$/,/^::#((?:end)region) ([\w*-]+)$/,/^# ?((?:end)?region) ([\w*-]+)$/],I=/^@include\(([^)]+(?:\.[a-z0-9]+))(?:#([\w-]+))?(?:\{(\d+)?-(\d+)?\})?\)$/,S=e=>{let r,n=null;for(;(r=_.exec(e))!==null;){const[u,s]=r.slice(1);if(!s)continue;const i=u.length;if(i>0)n=n!==null?Math.min(n,i):i;else break}return n&&(e=e.replace(new RegExp(`^[ 	]{${n}}(.*)`,"gm"),"$1")),e},P=(e,r,n,u=!1)=>{const[s,i,o]=r.exec(e.trim())||[];return Boolean(s&&i&&o===n&&i.match(u?/^[Ee]nd ?[rR]egion$/:/^[rR]egion$/))},F=(e,r)=>{let n=null,u=-1;for(const[s,i]of e.entries())if(n===null){for(const o of E)if(P(i,o,r)){u=s+1,n=o;break}}else if(P(i,n,r,!0))return{lineStart:u,lineEnd:s};return null},$=(e,{cwd:r,includedFiles:n,resolvedPath:u})=>{const{filePath:s}=e;let i=s;if(!h.isAbsolute(s)){if(!r)return console.error(`[@mdit/plugin-include]: Error when resolving path: ${s}`),`
Error when resolving path
`;i=h.resolve(r,s)}if(n.push(i),!v.existsSync(i))return console.error(`[@mdit/plugin-include]: ${i} not found`),`
File not found
`;const o=v.readFileSync(i).toString().replace(b,`
`).split(`
`);let l=[];if("region"in e){const t=F(o,e.region);t&&(l=o.slice(t.lineStart,t.lineEnd))}else{const{lineStart:t,lineEnd:d}=e;l=o.slice(t&&t-1,d)}if(u&&i.endsWith(".md")){const t=h.dirname(i);l.unshift(`@include-push(${t})`),l.push("@include-pop()")}return S(l.join(`
`).replace(/\n?$/,`
`))},m=(e,r,{cwd:n,includedFiles:u})=>e.split(`
`).map(s=>{if(s.startsWith("@include")){const i=s.match(I);if(i){const[,o,l,t,d]=i,c=r.getPath(o,n),a=r.resolveImagePath||r.resolveLinkPath,p=$({filePath:c,...l?{region:l}:{lineStart:t?Number(t):0,lineEnd:d?Number(d):void 0}},{cwd:n,includedFiles:u,resolvedPath:a});return r.deep&&c.endsWith(".md")?m(p,r,{cwd:h.isAbsolute(c)?h.dirname(c):n?h.resolve(n,h.dirname(c)):null,includedFiles:u}):p}}return s}).join(`
`),k=e=>r=>{const n=r.env,u=n.includedFiles||(n.includedFiles=[]),s=e.getCurrentPath(n);r.src=m(r.src,e,{cwd:s?h.dirname(s):null,includedFiles:u})},y=/^@include-push\(([^)]*?)\)$/,R=/^@include-pop\(\)$/,W=(e,r,n,u)=>{const s=e.bMarks[r]+e.tShift[r],i=e.eMarks[r],o=e.src.slice(s,i);let l=o.startsWith("@include-push");if(l){const t=o.match(y);if(t){if(u)return!0;const[,d]=t;e.line=r+1;const c=e.push("include_push","",0);c.map=[r,e.line],c.info=d,c.markup="include_push"}else l=!1}return l},A=(e,r,n,u)=>{const s=e.bMarks[r]+e.tShift[r],i=e.eMarks[r],o=e.src.slice(s,i);let l=o.startsWith("@include-pop");if(l)if(o.match(R)){if(u)return!0;e.line=r+1;const t=e.push("include_pop","",0);t.map=[r,e.line],t.markup="include_pop"}else l=!1;return l},w=(e,r,n,u)=>{var s;const i=r.attrIndex(e),o=(s=r.attrs)==null?void 0:s[i][1];if(o!=null&&o.startsWith(".")&&Array.isArray(u)){const{length:l}=u;if(l){const t=h.relative(h.dirname(n),u[l-1]);r.attrs[i][1]=`.${h.sep}${h.join(t,o)}`}}},C=(e,r)=>{const{getCurrentPath:n,getPath:u=l=>l,deep:s=!1,resolveLinkPath:i=!0,resolveImagePath:o=!0}=r||{};if(typeof n!="function")return console.error('[@mdit/plugin-include]: "getCurrentPath" is required');if(e.core.ruler.after("normalize","md_import",k({getCurrentPath:n,getPath:u,deep:s,resolveLinkPath:i,resolveImagePath:o})),o||i){if(e.block.ruler.before("table","md_include_push",W,{alt:["paragraph","reference","blockquote","list"]}),e.block.ruler.before("table","md_include_pop",A,{alt:["paragraph","reference","blockquote","list"]}),e.renderer.rules.include_push=(l,t,d,c)=>{const a=l[t];return(c.includedPaths??(c.includedPaths=[])).push(a.info),""},e.renderer.rules.include_pop=(l,t,d,c)=>{const a=c.includedPaths;return Array.isArray(a)?a.pop():console.error("[@mdit/plugin-include]: include_pop failed, no include_push."),""},o){const l=e.renderer.rules.image;e.renderer.rules.image=(t,d,c,a,p)=>{const g=t[d],f=n(a);return f&&w("src",g,f,a.includedPaths),l(t,d,c,a,p)}}if(i){const l=e.renderer.rules.link_open||((t,d,c,a,p)=>p.renderToken(t,d,c));e.renderer.rules.link_open=(t,d,c,a,p)=>{const g=t[d],f=n(a);return f&&w("href",g,f,a.includedPaths),l(t,d,c,a,p)}}}};exports.createIncludeCoreRule=k,exports.handleInclude=$,exports.include=C,exports.resolveInclude=m;
//# sourceMappingURL=index.cjs.map
