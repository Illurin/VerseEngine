"use strict";var a=require("markdown-it/lib/token.js");const r=(t,s,n)=>{const e=t.attrIndex(s),l=[s,n];e<0?t.attrPush(l):t.attrs[e]=l},c=(t,s)=>{const n=t[s].level-1;for(let e=s-1;e>=0;e--)if(t[e].level===n)return e;return-1},o=t=>(t==null?void 0:t.type)==="inline",d=t=>(t==null?void 0:t.type)==="paragraph_open",u=t=>(t==null?void 0:t.type)==="list_item_open",h=t=>/^\[[xX \u00A0]\][ \u00A0]/.test(t.content),k=(t,s)=>o(t[s])&&d(t[s-1])&&u(t[s-2])&&h(t[s]),b=(t,s,n=!0)=>{const e=new a("checkbox_input","input",0);return e.attrs=[["type","checkbox"],["class","task-list-item-checkbox"],["id",s]],/^\[[xX]\][ \u00A0]/.test(t.content)&&e.attrs.push(["checked","checked"]),n&&e.attrs.push(["disabled","disabled"]),e},p=t=>{const s=new a("label_open","label",1);return s.attrs=[["class","task-list-item-label"],["for",t]],s},v=()=>new a("label_close","label",-1),f=(t,s,n)=>{const e=`task-item-${s.env.tasklists++}`;t.children=t.children||[],t.children[0].content=t.children[0].content.slice(3),n.label&&(t.children.unshift(p(e)),t.children.push(v())),t.children.unshift(b(t,e,n.disabled))},m=(t,{disabled:s=!0,label:n=!0}={})=>{t.core.ruler.after("inline","github-task-lists",e=>{const l=e.tokens;e.env.tasklists||(e.env.tasklists=0);for(let i=2;i<l.length;i++)k(l,i)&&(f(l[i],e,{disabled:s,label:n}),r(l[i-2],"class","task-list-item"),r(l[c(l,i-2)],"class","task-list-container"));return!0})};exports.tasklist=m;
//# sourceMappingURL=index.cjs.map
