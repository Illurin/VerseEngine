{"version":3,"file":"index.js","sources":["../../src/node/utils.ts","../../src/node/compact/utils.ts","../../src/node/compact/convert.ts","../../src/node/info.ts","../../src/node/inject.ts","../../src/node/seo.ts","../../src/node/plugin.ts"],"sourcesContent":["import {\n  isLinkHttp,\n  removeEndingSlash,\n  removeLeadingSlash,\n} from \"@vuepress/shared\";\nimport { Logger, isAbsoluteUrl, isUrl } from \"vuepress-shared/node\";\n\nimport type { App, SiteLocaleConfig } from \"@vuepress/core\";\nimport type { SeoOptions } from \"./options.js\";\nimport type { ExtendPage } from \"./typings/index.js\";\n\nexport const logger = new Logger(\"vuepress-plugin-seo2\");\n\nexport interface LocaleConfig {\n  localePath: string;\n  lang: string;\n}\n\nexport const getLocales = (\n  lang: string,\n  locales: SiteLocaleConfig\n): LocaleConfig[] =>\n  Object.entries(locales)\n    .map(([localePath, value]) => ({ localePath, lang: value.lang }))\n    .filter(\n      (item): item is LocaleConfig =>\n        typeof item.lang === \"string\" && item.lang !== lang\n    );\n\nexport const getCover = (\n  { frontmatter }: ExtendPage,\n  { hostname }: SeoOptions,\n  { options: { base } }: App\n): string | null => {\n  const { banner, cover } = frontmatter;\n\n  if (banner) {\n    if (isAbsoluteUrl(banner)) return resolveUrl(hostname, base, banner);\n\n    if (isUrl(banner)) return banner;\n  }\n\n  if (cover) {\n    if (isAbsoluteUrl(cover)) return resolveUrl(hostname, base, cover);\n\n    if (isUrl(cover)) return cover;\n  }\n\n  return null;\n};\n\nexport const getImages = (\n  { content }: ExtendPage,\n  { hostname }: SeoOptions,\n  { options: { base } }: App\n): string[] => {\n  const result = /!\\[.*?\\]\\((.*?)\\)/giu.exec(content);\n\n  if (result) {\n    return result\n      .map(([, link]) => {\n        if (isAbsoluteUrl(link)) return resolveUrl(hostname, base, link);\n\n        if (isUrl(link)) return link;\n\n        return null;\n      })\n      .filter((item): item is string => item !== null);\n  }\n\n  return [];\n};\n\nexport const resolveUrl = (\n  hostname: string,\n  base: string,\n  url: string\n): string =>\n  `${\n    isLinkHttp(hostname)\n      ? removeEndingSlash(hostname)\n      : `https://${removeEndingSlash(hostname)}`\n  }${base}${removeLeadingSlash(url)}`;\n","import { colors } from \"@vuepress/utils\";\nimport { logger } from \"../utils.js\";\n\nexport const droppedLogger = (\n  options: Record<string, unknown>,\n  droppedOption: string,\n  hint = \"\",\n  newOption = \"\"\n): void => {\n  if (droppedOption in options) {\n    logger.error(\n      `\"${colors.magenta(droppedOption)}\" is ${colors.red(\"removed\")}${\n        newOption\n          ? `, please use ${colors.magenta(newOption)} instead.`\n          : \" and no longer supported\"\n      }${hint ? `\\n${hint}` : \"\"}`\n    );\n\n    if (!newOption) delete options[droppedOption];\n  }\n};\n","import { droppedLogger } from \"./utils.js\";\nimport type { SeoOptions } from \"../options.js\";\n\n/** @deprecated */\nexport const convertOptions = (\n  options: SeoOptions & Record<string, unknown>\n): void => {\n  droppedLogger(options, \"seo\", \"\", \"ogp\");\n  droppedLogger(options, \"customMeta\", \"\", \"customHead\");\n};\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { removeEndingSlash } from \"@vuepress/shared\";\nimport { getAuthor, getDate } from \"vuepress-shared/node\";\n\nimport { getCover, getImages, getLocales, resolveUrl } from \"./utils.js\";\n\nimport type { App } from \"@vuepress/core\";\nimport type { SeoOptions } from \"./options.js\";\nimport type { ArticleJSONLD, ExtendPage, SeoContent } from \"./typings/index.js\";\n\nexport const getOGP = (\n  page: ExtendPage,\n  options: SeoOptions,\n  app: App\n): SeoContent => {\n  const {\n    isArticle = (page): boolean =>\n      Boolean(page.filePathRelative && !page.frontmatter[\"home\"]),\n  } = options;\n  const {\n    options: { base },\n    siteData,\n  } = app;\n  const {\n    frontmatter: {\n      author: pageAuthor,\n      time,\n      date = time,\n      tag,\n      tags = <string[]>tag,\n    },\n    data: { git = {} },\n  } = page;\n\n  const title =\n    siteData.locales[page.pathLocale]?.title ||\n    siteData.title ||\n    siteData.locales[\"/\"]?.title ||\n    \"\";\n  const author =\n    pageAuthor === false ? [] : getAuthor(pageAuthor || options.author);\n  const { updatedTime } = git;\n\n  const modifiedTime = updatedTime ? new Date(updatedTime).toISOString() : \"\";\n  const articleTags: string[] = Array.isArray(tags)\n    ? tags\n    : typeof tag === \"string\"\n    ? [tag]\n    : [];\n\n  const articleTitle = page.title;\n  const cover = getCover(page, options, app);\n  const images = getImages(page, options, app);\n  const locales = getLocales(page.lang, siteData.locales);\n\n  let publishedTime = \"\";\n\n  if (date instanceof Date) publishedTime = new Date(date).toISOString();\n  else if (date) {\n    const dateInfo = getDate(date);\n\n    if (dateInfo && dateInfo.value)\n      publishedTime = dateInfo.value.toISOString();\n  }\n\n  const ogImage = cover || images[0] || options.fallBackImage || \"\";\n\n  const defaultOGP: SeoContent = {\n    \"og:url\": resolveUrl(options.hostname, base, page.path),\n    \"og:site_name\": title,\n    \"og:title\": articleTitle,\n    \"og:description\": page.frontmatter.description || \"\",\n    \"og:type\": isArticle(page) ? \"article\" : \"website\",\n    \"og:image\": ogImage,\n    \"og:updated_time\": modifiedTime,\n    \"og:locale\": page.lang,\n    \"og:locale:alternate\": locales.map(({ lang }) => lang),\n    ...(options.restrictions\n      ? { \"og:restrictions:age\": options.restrictions }\n      : {}),\n\n    ...(options.twitterID ? { \"twitter:creator\": options.twitterID } : {}),\n    ...(ogImage\n      ? {\n          \"twitter:card\": \"summary_large_image\",\n          \"twitter:image:alt\": articleTitle,\n        }\n      : {}),\n\n    \"article:author\": author[0]?.name,\n    \"article:tag\": articleTags,\n    \"article:published_time\": publishedTime,\n    \"article:modified_time\": modifiedTime,\n  };\n\n  return defaultOGP;\n};\n\nexport const getJSONLD = (\n  page: ExtendPage,\n  options: SeoOptions,\n  app: App\n): ArticleJSONLD | null => {\n  const {\n    isArticle = (page): boolean =>\n      Boolean(page.filePathRelative && !page.frontmatter[\"home\"]),\n  } = options;\n\n  const {\n    frontmatter: { author: pageAuthor, time, date = time },\n    data: { git = {} },\n  } = page;\n\n  const author =\n    pageAuthor === false ? [] : getAuthor(pageAuthor || options.author);\n  const { updatedTime } = git;\n\n  const modifiedTime = updatedTime ? new Date(updatedTime).toISOString() : \"\";\n\n  const articleTitle = page.title;\n  const cover = getCover(page, options, app);\n  const images = getImages(page, options, app);\n\n  let publishedTime = \"\";\n\n  if (date instanceof Date) publishedTime = new Date(date).toISOString();\n  else if (date) {\n    const dateInfo = getDate(date);\n\n    if (dateInfo && dateInfo.value)\n      publishedTime = dateInfo.value.toISOString();\n  }\n\n  return isArticle(page)\n    ? {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"NewsArticle\",\n        headline: articleTitle,\n        image: images.length ? images : [cover || options.fallBackImage || \"\"],\n        datePublished: publishedTime,\n        dateModified: modifiedTime,\n        author: author.map((item) => ({ \"@type\": \"Person\", ...item })),\n      }\n    : null;\n};\n\nexport const getCanonicalLink = (\n  page: ExtendPage,\n  options: SeoOptions\n): string | null =>\n  typeof options.canonical === \"function\"\n    ? options.canonical(page)\n    : typeof options.canonical === \"string\"\n    ? `${removeEndingSlash(options.canonical)}${page.path}`\n    : null;\n\nexport const getAlternateLinks = (\n  page: ExtendPage,\n  { hostname }: SeoOptions,\n  { options, siteData }: App\n): { lang: string; path: string }[] =>\n  getLocales(page.lang, siteData.locales).map(({ lang, localePath }) => ({\n    lang,\n    path: resolveUrl(\n      hostname,\n      options.base,\n      `${localePath}${page.path.replace(page.pathLocale, \"\")}`\n    ),\n  }));\n","import type { HeadConfig } from \"@vuepress/core\";\nimport type {\n  ArticleJSONLD,\n  ArticleSeoContent,\n  SeoContent,\n} from \"./typings/index.js\";\n\ninterface MetaOptions {\n  name: string;\n  content: string;\n  attribute?: string;\n}\n\nconst appendMetatoHead = (\n  head: HeadConfig[],\n  {\n    name,\n    content,\n    attribute = [\"article:\", \"og:\"].some((type) => name.startsWith(type))\n      ? \"property\"\n      : \"name\",\n  }: MetaOptions\n): void => {\n  if (content) head.push([\"meta\", { [attribute]: name, content }]);\n};\n\nexport const addOGP = (head: HeadConfig[], content: SeoContent): void => {\n  for (const property in content)\n    switch (property) {\n      case \"article:tag\":\n        (<ArticleSeoContent>content)[\"article:tag\"]!.forEach((tag: string) =>\n          appendMetatoHead(head, { name: \"article:tag\", content: tag })\n        );\n        break;\n      case \"og:locale:alternate\":\n        content[\"og:locale:alternate\"].forEach((locale: string) => {\n          if (locale !== content[\"og:locale\"])\n            appendMetatoHead(head, {\n              name: \"og:locale:alternate\",\n              content: locale,\n            });\n        });\n        break;\n      default:\n        if (<string>content[<keyof SeoContent>property])\n          appendMetatoHead(head, {\n            name: property,\n            content: <string>content[<keyof SeoContent>property],\n          });\n    }\n};\n\nexport const appendJSONLD = (\n  head: HeadConfig[],\n  content: ArticleJSONLD | null\n): void => {\n  if (content)\n    head.push([\n      \"script\",\n      { type: \"application/ld+json\" },\n      JSON.stringify(content),\n    ]);\n};\n\nexport const appendCanonical = (\n  head: HeadConfig[],\n  url?: string | null\n): void => {\n  if (url) head.push([\"link\", { rel: \"canonical\", href: url }]);\n};\n\nexport const appendAlternate = (\n  head: HeadConfig[],\n  urls: { lang: string; path: string }[]\n): void => {\n  urls.forEach(({ lang, path }) => {\n    head.push([\n      \"link\",\n      { rel: \"alternate\", hreflang: lang.toLowerCase(), href: path },\n    ]);\n  });\n};\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { fs } from \"@vuepress/utils\";\nimport {\n  getAlternateLinks,\n  getCanonicalLink,\n  getJSONLD,\n  getOGP,\n} from \"./info.js\";\nimport {\n  addOGP,\n  appendAlternate,\n  appendCanonical,\n  appendJSONLD,\n} from \"./inject.js\";\nimport { logger } from \"./utils.js\";\n\nimport type { App, AppDir } from \"@vuepress/core\";\nimport type { SeoOptions } from \"./options.js\";\nimport type { ExtendPage } from \"./typings/index.js\";\n\nexport const appendSEO = (\n  page: ExtendPage,\n  options: SeoOptions,\n  app: App\n): void => {\n  const head = page.frontmatter.head || [];\n\n  const defaultOGP = getOGP(page, options, app);\n  const defaultJSONLD = getJSONLD(page, options, app);\n\n  const ogpContent = options.ogp\n    ? options.ogp(defaultOGP, page, app)\n    : defaultOGP;\n\n  const jsonLDContent = options.jsonLd\n    ? options.jsonLd(defaultJSONLD, page, app)\n    : null;\n\n  const canonicalLink = getCanonicalLink(page, options);\n  const alternateLinks = getAlternateLinks(page, options, app);\n\n  addOGP(head, ogpContent);\n  appendJSONLD(head, jsonLDContent);\n  appendCanonical(head, canonicalLink);\n  appendAlternate(head, alternateLinks);\n\n  if (options.customHead) options.customHead(head, page, app);\n\n  page.frontmatter.head = head;\n};\n\nexport const generateRobotsTxt = async (dir: AppDir): Promise<void> => {\n  logger.load(\"Generating robots.txt\");\n  const publicPath = dir.public(\"robots.txt\");\n\n  let content = fs.existsSync(publicPath)\n    ? await fs.readFile(publicPath, { encoding: \"utf8\" })\n    : \"\";\n\n  if (content && !content.includes(\"User-agent\")) {\n    logger.error();\n    logger.update(\"robots.txt seems invalid!\");\n  } else {\n    content += \"\\nUser-agent:*\\nDisallow:\\n\";\n\n    await fs.writeFile(dir.dest(\"robots.txt\"), content, {\n      flag: \"w\",\n    });\n\n    logger.succeed();\n  }\n};\n","import { colors } from \"@vuepress/utils\";\nimport { getPageText, stripTags } from \"vuepress-shared/node\";\n\nimport { convertOptions } from \"./compact/index.js\";\nimport { appendSEO, generateRobotsTxt } from \"./seo.js\";\nimport { logger } from \"./utils.js\";\n\nimport type { Plugin, PluginFunction } from \"@vuepress/core\";\nimport type { SeoOptions } from \"./options.js\";\nimport type { ExtendPage } from \"./typings/index.js\";\n\nexport const seoPlugin =\n  (options: SeoOptions, legacy = false): PluginFunction =>\n  (app) => {\n    // TODO: Remove this in v2 stable\n    if (legacy) convertOptions(options as SeoOptions & Record<string, unknown>);\n    if (app.env.isDebug) logger.info(\"Options:\", options);\n\n    const plugin: Plugin = { name: \"vuepress-plugin-seo2\" };\n\n    if (!options.hostname) {\n      logger.error(`Option ${colors.magenta(\"hostname\")} is required!`);\n\n      return plugin;\n    }\n\n    return {\n      ...plugin,\n\n      extendsPage: (page: ExtendPage, app): void => {\n        // generate description\n        if (\n          !page.frontmatter.description &&\n          options.autoDescription !== false\n        ) {\n          if (page.data.excerpt)\n            page.frontmatter.description = stripTags(page.data.excerpt)\n              // convert link breaks into spaces\n              .replace(/(?:\\r?\\n)+/g, \" \")\n              // convert 2 or more spaces into 1\n              .replace(/ +/g, \" \")\n              .trim();\n          else {\n            const pageText = getPageText(page);\n\n            page.frontmatter.description =\n              pageText.length > 180 ? `${pageText.slice(0, 177)}...` : pageText;\n          }\n\n          page.data.autoDesc = true;\n        }\n\n        appendSEO(page, options, app);\n      },\n\n      onGenerated: (app): Promise<void> => generateRobotsTxt(app.dir),\n    };\n  };\n"],"names":["logger","Logger","getLocales","lang","locales","localePath","value","item","getCover","frontmatter","hostname","base","banner","cover","isAbsoluteUrl","resolveUrl","isUrl","getImages","content","result","link","url","isLinkHttp","removeEndingSlash","removeLeadingSlash","droppedLogger","options","droppedOption","hint","newOption","colors","convertOptions","getOGP","page","app","_a","_b","_c","isArticle","siteData","pageAuthor","time","date","tag","tags","git","title","author","getAuthor","updatedTime","modifiedTime","articleTags","articleTitle","images","publishedTime","dateInfo","getDate","ogImage","getJSONLD","getCanonicalLink","getAlternateLinks","appendMetatoHead","head","name","attribute","type","addOGP","property","locale","appendJSONLD","appendCanonical","appendAlternate","urls","path","appendSEO","defaultOGP","defaultJSONLD","ogpContent","jsonLDContent","canonicalLink","alternateLinks","generateRobotsTxt","dir","publicPath","fs","seoPlugin","legacy","plugin","stripTags","pageText","getPageText"],"mappings":"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"}