{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/node/compact/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAC;AAUrC,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,EAC/B,OAAO,EACP,gBAAgB,EAChB,SAAS,EACT,GAAG,GAAG,EAAE,EACR,KAAK,GAAG,EAAE,GACc,EAAQ,EAAE;IAClC,IAAI,gBAAgB,IAAI,OAAO,EAAE;QAC/B,MAAM,CAAC,IAAI,CACT,GAAG,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,OAAO,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,GACnE,KAAK,CAAC,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC,EAC3B,iBAAiB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,aACxC,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,EACrB,EAAE,CACH,CAAC;QAEF,IAAI,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAC3B,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAClC,IAAI,IAAI,GAAG,OAAO,CAAC;YAEnB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;gBAC1B,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC7B,sBAAsB;oBACtB,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;oBAE5B,IAAI,GAAG,IAAI,CAAC,GAAG,CAA4B,CAAC;iBAC7C;;oBAAM,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;SACJ;;YAAM,OAAO,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;QAEtD,OAAO,OAAO,CAAC,gBAAgB,CAAC,CAAC;KAClC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,CAC3B,OAAgC,EAChC,aAAqB,EACrB,IAAI,GAAG,EAAE,EACT,SAAS,GAAG,EAAE,EACR,EAAE;IACR,IAAI,aAAa,IAAI,OAAO,EAAE;QAC5B,MAAM,CAAC,KAAK,CACV,IAAI,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,GAC5D,SAAS;YACP,CAAC,CAAC,gBAAgB,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW;YACtD,CAAC,CAAC,0BACN,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAC7B,CAAC;QAEF,IAAI,CAAC,SAAS;YAAE,OAAO,OAAO,CAAC,aAAa,CAAC,CAAC;KAC/C;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,CAC3B,iBAAyB,EACzB,IAAY,EACN,EAAE;IACR,MAAM,CAAC,IAAI,CACT,IAAI,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,MAAM,CAAC,GAAG,CACrD,YAAY,CACb,iBAAiB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CACnD,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { colors } from \"@vuepress/utils\";\nimport { logger } from \"../utils.js\";\n\nexport interface DeprecatedLoggerOptions {\n  options: Record<string, unknown>;\n  deprecatedOption: string;\n  newOption: string;\n  msg?: string;\n  scope?: string;\n}\n\nexport const deprecatedLogger = ({\n  options,\n  deprecatedOption,\n  newOption,\n  msg = \"\",\n  scope = \"\",\n}: DeprecatedLoggerOptions): void => {\n  if (deprecatedOption in options) {\n    logger.warn(\n      `${colors.magenta(deprecatedOption)} is ${colors.yellow(\"deprecated\")}${\n        scope ? ` in ${scope}` : \"\"\n      }, please use \"${colors.magenta(newOption)}\" instead.${\n        msg ? `\\n${msg}` : \"\"\n      }`\n    );\n\n    if (newOption.includes(\".\")) {\n      const keys = newOption.split(\".\");\n      let temp = options;\n\n      keys.forEach((key, index) => {\n        if (index !== keys.length - 1) {\n          // ensure level exists\n          temp[key] = temp[key] || {};\n\n          temp = temp[key] as Record<string, unknown>;\n        } else temp[key] = options[deprecatedOption];\n      });\n    } else options[newOption] = options[deprecatedOption];\n\n    delete options[deprecatedOption];\n  }\n};\n\nexport const droppedLogger = (\n  options: Record<string, unknown>,\n  droppedOption: string,\n  hint = \"\",\n  newOption = \"\"\n): void => {\n  if (droppedOption in options) {\n    logger.error(\n      `\"${colors.magenta(droppedOption)}\" is ${colors.red(\"removed\")}${\n        newOption\n          ? `, please use ${colors.magenta(newOption)} instead.`\n          : \" and no longer supported\"\n      }${hint ? `\\n${hint}` : \"\"}`\n    );\n\n    if (!newOption) delete options[droppedOption];\n  }\n};\n\nexport const deprecatedMsg = (\n  deprecatedOptions: string,\n  hint: string\n): void => {\n  logger.warn(\n    `\"${colors.magenta(deprecatedOptions)}\" is ${colors.red(\n      \"deprecated\"\n    )}, please use \"${colors.magenta(hint)}\" instead.`\n  );\n};\n"]}