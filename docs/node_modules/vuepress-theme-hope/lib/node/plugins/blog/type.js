import { defaultPageSorter } from "./utils.js";
import { compareDate } from "vuepress-shared/node";
export const getArticleType = (options, themeData) => ({
    key: "article",
    sorter: defaultPageSorter,
    filter: ({ frontmatter, filePathRelative }) => 
    // not home
    !frontmatter.home &&
        // declaring this is an article
        (frontmatter.article ||
            // generated from markdown files
            Boolean(frontmatter.article !== false && filePathRelative)),
    path: options.article,
    layout: "BlogType",
    frontmatter: (localePath) => ({
        title: themeData.locales[localePath].blogLocales.article,
    }),
});
export const getStarType = (options, themeData) => ({
    key: "star",
    filter: ({ frontmatter }) => Boolean(frontmatter.star),
    sorter: (pageA, pageB) => {
        const prevKey = pageA.frontmatter.star;
        const nextKey = pageB.frontmatter.star;
        if (prevKey && nextKey && prevKey !== nextKey)
            return Number(nextKey) - Number(prevKey);
        if (prevKey && !nextKey)
            return -1;
        if (!prevKey && nextKey)
            return 1;
        return compareDate(pageA.routeMeta["d" /* ArticleInfoType.date */], pageB.routeMeta["d" /* ArticleInfoType.date */]);
    },
    path: options.star,
    layout: "BlogType",
    frontmatter: (localePath) => ({
        title: themeData.locales[localePath].blogLocales.star,
    }),
});
export const getTimelineType = (options, themeData) => ({
    key: "timeline",
    filter: ({ frontmatter, routeMeta }) => "d" /* ArticleInfoType.date */ in routeMeta && frontmatter["timeline"] !== false,
    sorter: (pageA, pageB) => compareDate(pageA.routeMeta["d" /* ArticleInfoType.date */], pageB.routeMeta["d" /* ArticleInfoType.date */]),
    path: options.timeline,
    layout: "Timeline",
    frontmatter: (localePath) => ({
        title: themeData.locales[localePath].blogLocales.timeline,
    }),
});
//# sourceMappingURL=type.js.map